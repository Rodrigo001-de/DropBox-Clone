{"ast":null,"code":"import _slicedToArray from\"/home/rodrigo/WWW/TypeScript/Dropbox/dropbox-clone/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useEffect,useState}from'react';import{Container}from'./styles';var scrollThreshold=300;var SideMenu=function SideMenu(_ref){var children=_ref.children;var _useState=useState(0),_useState2=_slicedToArray(_useState,2),scrollY=_useState2[0],setScrollY=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),isActive=_useState4[0],setIsActive=_useState4[1];useEffect(function(){function onScroll(){setScrollY(window.scrollY);setIsActive(false);};window.addEventListener('scroll',onScroll);return function(){return window.removeEventListener('scroll',onScroll);};},[]);var classes=[isActive?'open':'',scrollY<=scrollThreshold?'scrollOpen':''];var className=classes.join(' ').trim();function toggleActiveMenu(){setIsActive(function(prev){return!prev;});// Se for true vai ficar false e assim ao contrario\n}window.toggleActiveMenu=toggleActiveMenu;return/*#__PURE__*/React.createElement(Container,{className:className},children);};export default SideMenu;","map":{"version":3,"sources":["/home/rodrigo/WWW/TypeScript/Dropbox/dropbox-clone/src/components/SideMenu/index.tsx"],"names":["React","useEffect","useState","Container","scrollThreshold","SideMenu","children","scrollY","setScrollY","isActive","setIsActive","onScroll","window","addEventListener","removeEventListener","classes","className","join","trim","toggleActiveMenu","prev"],"mappings":"qIAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,KAA2C,OAA3C,CAEA,OAASC,SAAT,KAA0B,UAA1B,CAEA,GAAMC,CAAAA,eAAe,CAAG,GAAxB,CAQA,GAAMC,CAAAA,QAAkB,CAAG,QAArBA,CAAAA,QAAqB,MAAkB,IAAfC,CAAAA,QAAe,MAAfA,QAAe,eACbJ,QAAQ,CAAC,CAAD,CADK,wCACpCK,OADoC,eAC3BC,UAD2B,8BAEXN,QAAQ,CAAC,KAAD,CAFG,yCAEpCO,QAFoC,eAE1BC,WAF0B,eAI3CT,SAAS,CAAC,UAAM,CACd,QAASU,CAAAA,QAAT,EAAoB,CAClBH,UAAU,CAACI,MAAM,CAACL,OAAR,CAAV,CACAG,WAAW,CAAC,KAAD,CAAX,CACD,EAEDE,MAAM,CAACC,gBAAP,CAAwB,QAAxB,CAAkCF,QAAlC,EAEA,MAAO,kBAAMC,CAAAA,MAAM,CAACE,mBAAP,CAA2B,QAA3B,CAAqCH,QAArC,CAAN,EAAP,CACD,CATQ,CASN,EATM,CAAT,CAWA,GAAMI,CAAAA,OAAO,CAAG,CACdN,QAAQ,CAAG,MAAH,CAAY,EADN,CAEdF,OAAO,EAAIH,eAAX,CAA6B,YAA7B,CAA4C,EAF9B,CAAhB,CAIA,GAAMY,CAAAA,SAAS,CAAGD,OAAO,CAACE,IAAR,CAAa,GAAb,EAAkBC,IAAlB,EAAlB,CAEA,QAASC,CAAAA,gBAAT,EAA4B,CAC1BT,WAAW,CAAC,SAAAU,IAAI,QAAI,CAACA,IAAL,EAAL,CAAX,CAA4B;AAC7B,CAEDR,MAAM,CAACO,gBAAP,CAA0BA,gBAA1B,CAEA,mBACE,oBAAC,SAAD,EAAW,SAAS,CAAEH,SAAtB,EACGV,QADH,CADF,CAKD,CAhCD,CAkCA,cAAeD,CAAAA,QAAf","sourcesContent":["import React, { useEffect, useState } from 'react';\n\nimport { Container } from './styles';\n\nconst scrollThreshold = 300;\n\ndeclare global {\n  interface Window {\n    toggleActiveMenu: (() => void) | undefined;\n  }\n}\n\nconst SideMenu: React.FC = ({ children }) => {\n  const [scrollY, setScrollY] = useState(0);\n  const [isActive, setIsActive] = useState(false);\n\n  useEffect(() => {\n    function onScroll() {\n      setScrollY(window.scrollY);\n      setIsActive(false);\n    };\n\n    window.addEventListener('scroll', onScroll);\n\n    return () => window.removeEventListener('scroll', onScroll);\n  }, []);\n\n  const classes = [\n    isActive ? 'open' : '',\n    scrollY <= scrollThreshold ? 'scrollOpen' : '',\n  ];\n  const className = classes.join(' ').trim();\n\n  function toggleActiveMenu() {\n    setIsActive(prev => !prev); // Se for true vai ficar false e assim ao contrario\n  }\n\n  window.toggleActiveMenu = toggleActiveMenu;\n  \n  return (\n    <Container className={className}>\n      {children}\n    </Container>\n  );\n}\n\nexport default SideMenu;"]},"metadata":{},"sourceType":"module"}